{
  "name": "@newordergame/location-site",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "start": "shx cp environment/.env.development .env && nodemon",
    "deploy": "yarn citadel:deploy",
    "docker:build": "docker build -t location-site-service .",
    "docker:login": "docker login",
    "docker:tag": "docker tag location-site-service devlysh/newordergame-location-site",
    "docker:push": "docker push devlysh/newordergame-location-site",
    "docker:pull": "docker pull devlysh/newordergame-location-site",
    "citadel:deploy": "yarn docker:build && yarn docker:tag && yarn docker:login && yarn docker:push && yarn citadel:restart",
    "citadel:restart": "yarn citadel:stop && yarn citadel:rm && yarn citadel:pull && yarn citadel:start",
    "citadel:start": "ssh $CITADEL_USER@$CITADEL_IP_ADDRESS docker run -d --name newordergame-location-site devlysh/newordergame-location-site",
    "citadel:stop": "ssh $CITADEL_USER@$CITADEL_IP_ADDRESS docker stop newordergame-location-site",
    "citadel:rm": "ssh $CITADEL_USER@$CITADEL_IP_ADDRESS docker rm newordergame-location-site",
    "citadel:login": "ssh $CITADEL_USER@$CITADEL_IP_ADDRESS docker login",
    "citadel:pull": "ssh $CITADEL_USER@$CITADEL_IP_ADDRESS docker pull devlysh/newordergame-location-site",
    "webpack:build": "cross-env NODE_ENV=production shx cp environment/.env.production .env && webpack --mode=production",
    "webpack:watch": "shx cp environment/.env.development .env && webpack --watch",
    "lint": "eslint ./src --config ./.eslintrc.js --no-cache",
    "format": "prettier --write src/**/*.ts",
    "test": "shx cp environment/.env.development .env && jest --detectOpenHandles --collect-coverage",
    "type-check": "tsc --noEmit"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
  },
  "devDependencies": {
  }
}
